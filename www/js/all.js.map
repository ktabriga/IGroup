{"version":3,"sources":["Chats.js","ChatsCtrl.js","Rotas.js","app.js"],"names":[],"mappings":"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","file":"all.js","sourcesContent":[" export function Chats() {\n  // Might use a resource here that returns a JSON array\n\n  // Some fake testing data\n  var chats = [{\n    id: 0,\n    name: 'Ben Catabrigas',\n    lastText: 'You on your way?',\n    face: 'https://pbs.twimg.com/profile_images/514549811765211136/9SgAuHeY.png'\n  },{\n    id: 1,\n    name: 'Max Lynx',\n    lastText: 'Hey, it\\'s me',\n    face: 'https://avatars3.githubusercontent.com/u/11214?v=3&s=460'\n  },{\n    id: 2,\n    name: 'Adam Bradleyson',\n    lastText: 'I should buy a boat',\n    face: 'https://pbs.twimg.com/profile_images/479090794058379264/84TKj_qa.jpeg'\n  }, {\n    id: 3,\n    name: 'Perry Governor',\n    lastText: 'Look at my mukluks!',\n    face: 'https://pbs.twimg.com/profile_images/598205061232103424/3j5HUXMY.png'\n  }, {\n    id: 4,\n    name: 'Mike Harrington',\n    lastText: 'This is wicked good ice cream.',\n    face: 'https://pbs.twimg.com/profile_images/578237281384841216/R3ae1n61.png'\n  }];\n\n  return {\n    all() {\n      return chats;\n    },\n    remove(chat) {\n      chats.splice(chats.indexOf(chat), 1);\n    },\n    get(chatId) {\n      for (var i = 0; i < chats.length; i++) {\n        if (chats[i].id === parseInt(chatId)) {\n          return chats[i];\n        }\n      }\n      return null;\n    }\n  };\n}","ChatsCtrl.$inject = [\"$scope\", \"Chats\"];\n\nexport function ChatsCtrl($scope, Chats) {\n  // With the new view caching in Ionic, Controllers are only called\n  // when they are recreated or on app start, instead of every page change.\n  // To listen for when this page is active (for example, to refresh data),\n  // listen for the $ionicView.enter event:\n  //\n    $scope.$on('$ionicView.enter', e => {}); \n  \n  $scope.chats = Chats.all();\n  $scope.remove = function(chat) {\n     Chats.remove(chat);\n  }\n}","Rotas.$inject = [\"$stateProvider\", \"$urlRouterProvider\"];\n\nexport function Rotas($stateProvider, $urlRouterProvider) {\n\n  // Ionic uses AngularUI Router which uses the concept of states\n  // Learn more here: https://github.com/angular-ui/ui-router\n  // Set up the various states which the app can be in.\n  // Each state's controller can be found in controllers.js\n  $stateProvider\n\n  // setup an abstract state for the tabs directive\n    .state('tab', {\n    url: \"/tab\",\n    abstract: true,\n    templateUrl: \"templates/tabs.html\"\n  })\n\n  // Each tab has its own nav history stack:\n\n  .state('tab.dash', {\n    url: '/dash',\n    views: { \n      'tab-dash': {\n        templateUrl: 'templates/tab-dash.html',\n        controller: 'DashCtrl'\n      }\n    }\n  })\n\n  .state('tab.chats', {\n      url: '/chats',\n      views: {\n        'tab-chats': {\n          templateUrl: 'templates/tab-chats.html',\n          controller: 'ChatsCtrl'\n        }\n      }\n    })\n    .state('tab.chat-detail', {\n      url: '/chats/:chatId',\n      views: {\n        'tab-chats': {\n          templateUrl: 'templates/chat-detail.html',\n          controller: 'ChatDetailCtrl'\n        }\n      }\n    })\n\n  .state('tab.account', {\n    url: '/account',\n    views: {\n      'tab-account': {\n        templateUrl: 'templates/tab-account.html',\n        controller: 'AccountCtrl'\n      }\n    }\n  });\n\n  // if none of the above states are matched, use this as the fallback\n  $urlRouterProvider.otherwise('/tab/dash');\n\n}","import {ChatsCtrl} from \"ChatsCtrl\";\nimport {Chats} from \"Chats\";\nimport {Rotas} from \"Rotas\";\n\nangular.module('grin', ['ionic'])\n  .run($ionicPlatform => {\n    $ionicPlatform.ready(function() {\n     \n      if (window.cordova && window.cordova.plugins && window.cordova.plugins.Keyboard) {\n        cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);\n      }\n      if (window.StatusBar) {\n        StatusBar.styleLightContent();\n      }\n    });\n\n  })\n  .controller('DashCtrl', () => {})\n  .controller('ChatsCtrl', ChatsCtrl)\n\n.controller('ChatDetailCtrl', ($scope, $stateParams, Chats) => {\n  $scope.chat = Chats.get($stateParams.chatId);\n})\n\n.controller('AccountCtrl', $scope => {\n  $scope.settings = {\n    enableFriends: true\n  };\n})\n\n.factory('Chats', Chats)\n.config(Rotas);\n"],"sourceRoot":"/source/"}